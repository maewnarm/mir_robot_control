version: '3'
services:
  backend_api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-api
    ports:
      - 8888:8888
    volumes:
      - ./data:/data
      - ./backend/app:/code/app
      - ./backend/.env.dev:/code/.env.dev
    networks:
      - nets
    restart: always
    env_file:
      - ./backend/.env.dev
    command: uvicorn app.main:app --host 0.0.0.0 --port 8888 --reload
  task_manager:
    build:
      context: ./task_manager
      dockerfile: Dockerfile
    container_name: task-manager
    volumes:
      - ./data:/data
    networks:
      - nets
    restart: always
    env_file:
      - ./task_manager/.env.dev
    depends_on:
      - backend_api
  robot_cms:
    build:
      context: ./robot_cms
      dockerfile: Dockerfile
      args:
        BUILD_ENV: .env.dev
    container_name: robot-cms
    ports:
      - 5000:3000
    networks:
      - nets
    restart: always
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    environment:
      - NODE_ENV=production
    volumes:
      - ./nginx/confs:/etc/nginx/conf.d/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/ssl
    ports:
      - 80:80
      - 443:443
    networks:
      - nets
    depends_on:
      - task_manager
      - backend_api
      - robot_cms
      
networks: 
  nets:
    driver: bridge